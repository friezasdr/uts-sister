version: '3.8'

services:
  # Service 1: Aggregator (Main Application)
  aggregator:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uts-aggregator
    ports:
      - "8080:8080"
    environment:
      - HOST=0.0.0.0
      - PORT=8080
      - DEDUP_DB_PATH=/app/data/dedup.db
      - LOG_LEVEL=INFO
      - QUEUE_MAX_SIZE=10000
      - CONSUMER_WORKERS=3
    volumes:
      - aggregator-data:/app/data
    networks:
      - aggregator-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8080/health')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Service 2: Publisher (Bonus - untuk demo simulasi)
  publisher:
    build:
      context: .
      dockerfile: Dockerfile.publisher
    container_name: uts-publisher
    depends_on:
      aggregator:
        condition: service_healthy
    environment:
      - AGGREGATOR_URL=http://aggregator:8080
    networks:
      - aggregator-net
    restart: "no"

# Volume untuk persistence
volumes:
  aggregator-data:
    driver: local

# Network internal
networks:
  aggregator-net:
    driver: bridge
